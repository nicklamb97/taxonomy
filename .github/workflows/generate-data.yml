name: Generate Synthetic Data for InstructLab

on:
  push:
    branches:
      - main

jobs:
  Generate:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
      
    - name: Get commit message
      run: |
        echo "üìú Retrieving commit message for SHA: ${{ github.sha }}"
        COMMIT_MESSAGE=$(git log --format=%B -n 1 ${{ github.sha }})
        echo "COMMIT_MESSAGE<<EOF" >> $GITHUB_ENV
        echo "$COMMIT_MESSAGE" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV
        echo "‚úÖ Commit message retrieved and stored in environment variable"

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
      
    - name: Install dependencies
      run: |
        echo "üîß Installing required Python packages..."
        python -m pip install --upgrade pip
        pip install instructlab-schema
        pip install instructlab==0.17.1 gitpython
        echo "‚úÖ Dependencies installed successfully"
        pip list
        echo "üì¶ Above is the list of installed packages"

    - name: Clone custom taxonomy repository
      run: |
        echo "üîÑ Cloning custom taxonomy repository..."
        git clone "https://github.com/nicklamb97/taxonomy.git" "$GITHUB_WORKSPACE/taxonomy"
        echo "‚úÖ Custom taxonomy repository cloned successfully to $GITHUB_WORKSPACE/taxonomy"

    - name: Clone and copy config.yaml
      run: |
        echo "üîÑ Cloning config repository and copying config.yaml..."
        git clone "https://github.com/nicklamb97/instructlab-config.git" temp_config
        cp temp_config/config.yaml "$GITHUB_WORKSPACE/config.yaml"
        rm -rf temp_config
        echo "‚úÖ config.yaml copied to root directory: $GITHUB_WORKSPACE/config.yaml"

    - name: Download model
      env:
        HF_TOKEN: ${{ secrets.HF_TOKEN }}
      run: |
        echo "üì• Downloading Mistral-7B-Instruct-v0.3 model..."
        HF_TOKEN=$HF_TOKEN ilab model download --repository=NickLamb/Mistral-7B-Instruct-v0.3 --filename=Mistral-7B-Instruct-v0.3.Q4_K_M.gguf
        echo "‚úÖ Model downloaded successfully"
        echo "MODEL_DOWNLOADED=true" >> "$GITHUB_ENV"

    - name: Get diff and prepare for data generation
      run: |
        echo "üîç Analyzing changes and preparing for data generation..."
        cd "$GITHUB_WORKSPACE/taxonomy"
        git config --local user.name "Nick Lamb"
        git config --local user.email "nick.lamb@diegesis.co.uk"
        git fetch origin
        TRIGGER_COMMIT="${{ github.sha }}"
        PREVIOUS_COMMIT=$(git rev-parse $TRIGGER_COMMIT^)
        echo "üîó Trigger commit: $TRIGGER_COMMIT"
        echo "üîô Previous commit: $PREVIOUS_COMMIT"
        
        echo "üìÑ Identifying changed files..."
        CHANGED_FILES=$(git diff --name-only --diff-filter=AM "$PREVIOUS_COMMIT" "$TRIGGER_COMMIT")
        echo "Changed files:"
        echo "$CHANGED_FILES"
        
        if echo "$CHANGED_FILES" | grep -q "qna.yaml"; then
          echo "üîé Changes detected in qna.yaml files. Preparing for data generation..."
          git checkout -b temp_branch $PREVIOUS_COMMIT
          git cherry-pick $TRIGGER_COMMIT
          echo "‚úÖ Changes applied to temporary branch. Ready for ilab taxonomy diff."
          echo "QNA_YAML_CHANGED=true" >> "$GITHUB_ENV"
        else
          echo "‚ÑπÔ∏è No changes detected in qna.yaml files. Skipping data generation."
          echo "QNA_YAML_CHANGED=false" >> "$GITHUB_ENV"
        fi

    - name: Run ilab taxonomy diff and generate data
      if: env.QNA_YAML_CHANGED == 'true' && env.MODEL_DOWNLOADED == 'true'
      run: |
        cd "$GITHUB_WORKSPACE"
        echo "üìç Current directory: $(pwd)"
        echo "üîÑ Running: ilab taxonomy diff"
        ilab taxonomy diff || { echo "‚ùå ilab taxonomy diff failed. Exiting gracefully."; exit 0; }
        echo "üîÑ Running: ilab data generate"
        ilab data generate --output-dir ./generated || { echo "‚ùå ilab data generate failed. Exiting gracefully."; exit 0; }
        echo "‚úÖ Data generation completed successfully"

    - name: No qna.yaml changes or model not downloaded
      if: env.QNA_YAML_CHANGED == 'false' || env.MODEL_DOWNLOADED != 'true'
      run: |
        if [ "$QNA_YAML_CHANGED" = "false" ]; then
          echo "‚ÑπÔ∏è No qna.yaml files were changed. Skipping ilab taxonomy diff and data generation."
        fi
        if [ "$MODEL_DOWNLOADED" != "true" ]; then
          echo "‚ö†Ô∏è Model was not downloaded successfully. Skipping data generation."
        fi

    - name: Commit and push generated data to separate repository
      if: env.QNA_YAML_CHANGED == 'true' && env.MODEL_DOWNLOADED == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GENERATED_REPO_TOKEN }}
      run: |
        cd "$GITHUB_WORKSPACE"
        if [ -d "generated" ]; then
          echo "üìÅ Generated files directory found"
          echo "üîÑ Cloning target repository for generated data..."
          git clone "https://github.com/nicklamb97/generated.git" temp_generated
          cd temp_generated
          git config user.name "Nick Lamb"
          git config user.email "nick.lamb@diegesis.co.uk"
          
          echo "üîÄ Creating new branch for generated data..."
          BRANCH_NAME="auto-generated-$(date +%Y%m%d-%H%M%S)"
          git checkout -b $BRANCH_NAME
          
          echo "üìã Copying generated files..."
          cp -r ../generated/* .
          git add .
          echo "üíæ Committing changes with original commit message..."
          git commit -m "${{ env.COMMIT_MESSAGE }}" || echo "‚ÑπÔ∏è No changes to commit"
          
          echo "üöÄ Pushing new branch to repository..."
          git push "https://$GITHUB_TOKEN@github.com/nicklamb97/generated.git" $BRANCH_NAME
          
          echo "‚úÖ Changes pushed to generated repository on branch $BRANCH_NAME"
          
          echo "üîó Creating pull request..."
          PR_URL=$(curl -X POST -H "Authorization: token $GITHUB_TOKEN" \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/repos/nicklamb97/generated/pulls \
               -d '{
                 "title": "Auto-generated data: ${{ env.COMMIT_MESSAGE }}",
                 "body": "This PR contains automatically generated synthetic data based on the following commit:\n\n${{ env.COMMIT_MESSAGE }}\n\nPlease review and merge.",
                 "head": "'"$BRANCH_NAME"'",
                 "base": "main"
               }' | jq -r .html_url)
          
          echo "‚úÖ Pull request created: $PR_URL"
          
          cd ..
          rm -rf temp_generated
        else
          echo "No generated directory found. Nothing to commit."
        fi
