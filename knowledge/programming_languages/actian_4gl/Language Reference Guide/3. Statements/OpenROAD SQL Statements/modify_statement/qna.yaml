version: 2
task_description: Explain the features and parameters of the modify statement in Actian 4GL SQL.
created_by: guyvernon
domain: sql_actian_4gl
seed_examples:
  - question: What is the syntax of the modify statement?
    answer: |
      The syntax of the modify statement is as follows:
      ```
      modify [schema.]table_name|[schema.]indexname |
              [ schema.]table-name
              to modify-action [unique]
              [on column_name [asc|desc]{, column_name [asc|desc]}]
              [with_clause];
      ```

  - question: What does the modify statement do?
    answer: |
      The modify statement changes properties of a table or index. It allows for
      operations such as changing the storage structure, specifying allocated pages,
      adding pages, reorganizing indexes, moving tables, deleting all rows,
      specifying index recreation, and more.

  - question: What are some common modify-action options?
    answer: |
      Common modify-action options include:
      - isam: Modifies to Indexed Sequential Access Method structure
      - hash: Modifies to HASH structure
      - heap: Modifies to HEAP structure
      - btree: Modifies to BTREE structure
      - reconstruct: Rebuilds the table with current structure
      - truncated: Deletes all data and releases file space
      - reorganize: Moves data to a different location
      - merge: Shrinks a btree index

  - question: How can you change a table's storage structure using the modify statement?
    answer: |
      To change a table's storage structure, use the modify statement with the
      desired structure. For example:
      ```sql
      modify employee to isam on eno;
      ```
      This modifies the employee table to an indexed sequential storage structure
      with eno as the keyed column.

  - question: What is the purpose of the 'with' clause in the modify statement?
    answer: |
      The 'with' clause in the modify statement allows you to specify additional
      parameters such as:
      - allocation: Number of pages initially allocated
      - extend: Number of pages for growth
      - fillfactor: Percentage of each primary data page to be filled
      - compression: Data and key compression options
      - location: New locations for the table
      - unique_scope: How uniqueness is checked during updates
      - persistence: Whether an index is recreated when its base table is modified

  - question: How can you add pages to a table using the modify statement?
    answer: |
      To add pages to a table, use the modify...to add_extend option. For example:
      ```sql
      modify table_name to add_extend with extend = number_of_pages;
      ```
      If the 'with extend' option is omitted, the default number of pages specified
      for extending the table is added.

  - question: Can you modify a table to be read-only?
    answer: |
      Yes, you can modify a table to be read-only using the following syntax:
      ```sql
      modify table_name to readonly;
      ```
      This marks the table as read-only and returns an error if insert, delete,
      or update operations are attempted.

  - question: How can you change a table's partitioning scheme?
    answer: |
      To change a table's partitioning scheme, use the modify statement with the
      'reconstruct' action and the 'partition' clause:
      ```sql
      modify table_name to reconstruct with partition = (partitioning-scheme);
      ```
      To remove partitioning, use the 'nopartition' clause instead.

  - question: What permissions are required to execute a modify statement?
    answer: |
      To execute a modify statement, you must either own the table or have
      SECURITY privilege and connect as the owner.

  - question: Can you perform a modify operation online?
    answer: |
      Yes, you can perform an online modify operation using the concurrent_updates
      option. This allows normal read and update access to the table for most of
      the modify operation. For example:
      ```sql
      modify table_name to modify-option with concurrent_updates;
      ```
      Note that this option is not available for all types of tables and operations.

document:
  repo: https://github.com/nicklamb97/instructlab-data.git
  commit: f4aca71
  patterns:
    - modify_statement.md
