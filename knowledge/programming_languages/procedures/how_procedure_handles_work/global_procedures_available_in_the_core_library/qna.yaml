version: 2
task_description: >-
  Explain the global procedures available in the core library for Actian 4GL
  SQL.
created_by: connorgilchrist99
domain: sql_actian_4gl
seed_examples:
  - question: What global procedures are available in the core library of OpenROAD?
    answer: >
      The core library includes the following global procedures:

      - _StringParseKeyword: Returns the value of a specified keyword in a
      formatted string.

      - _StringSub: Substitutes values for %parameters in a string.

      - _StringTokenSub: Substitutes a value for a single token in a string,
      replacing only the first occurrence.
  - question: What does the _StringParseKeyword procedure do in OpenROAD?
    answer: >
      The _StringParseKeyword procedure returns the value of a specified keyword
      in a formatted string. The string format is
      “keyword1=value1[;keyword2=value2]”, with each keyword-value pair
      separated by a semicolon. The search for the keyword is not case
      sensitive.
  - question: How do you use the _StringParseKeyword procedure?
    answer: >
      The syntax for the _StringParseKeyword procedure is:

      ```4gl

      varchar(2000) = _StringParseKeyword(string = varchar(2000), keyword =
      varchar(32);)

      ```

      Example:

      ```4gl

      str1 = 'Name=John Doe;Address=101 California, USA';

      value = _StringParseKeyword(string = str1, keyword = 'address');

      ```

      This returns the string “101 California, USA”.
  - question: What does the _StringSub procedure do?
    answer: >
      The _StringSub procedure substitutes values for parameters embedded in a
      formatted string. It also substitutes “\t” with HC_TAB and “\n” with
      HC_NEWLINE. The parameters are embedded in the format of “%1”, “%2”, etc.
  - question: How do you use the _StringSub procedure?
    answer: >
      The syntax for the _StringSub procedure is:

      ```4gl

      varchar(2000) = _StringSub(string = varchar(2000), arg1 = varchar(100),
      arg2 = varchar(100), arg3 = varchar(100), arg4 = varchar(100), arg5 =
      varchar(100), arg6 = varchar(100), arg7 = varchar(100), arg8 =
      varchar(100), arg9 = varchar(100));

      ```

      Example:

      ```4gl

      str1 = _StringSub(string = 'Employee Name:%1, Address:%2(c/o %1)', arg1 =
      'John Doe', arg2 ='101 California, USA');

      ```

      This returns “Employee Name: John Doe, Address:101 California, USA (c/o
      John Doe)”.
  - question: What does the _StringTokenSub procedure do?
    answer: >
      The _StringTokenSub procedure substitutes a value for the specified token
      in a string. It replaces only the first occurrence of the token and
      optionally returns the count of remaining tokens in the string.
  - question: How do you use the _StringTokenSub procedure?
    answer: >
      The syntax for the _StringTokenSub procedure is:

      ```4gl

      varchar(2000) = _StringTokenSub(string = varchar(2000), token =
      varchar(256), replacewith = varchar(256) [remainingtokens =
      byref(integer)]);

      ```

      Example:

      ```4gl

      str1 = _StringTokenSub(string = 'Employee Name:John Doe, Address:101
      California, USA (c/o John Doe)', token = 'John Doe', replacewith = 'Jane
      Doe', remaingtoken = byref(icount));

      ```

      This returns “Employee Name:Jane Doe, Address:101 California, USA (c/o
      John Doe)”. The `icount` variable contains 1, indicating one more
      occurrence of "John Doe" in the string.
document:
  repo: 'https://github.com/nicklamb97/instructlab-data.git'
  commit: 5b7a381
  patterns:
    - global_procedures_available_in_the_core_library.md
