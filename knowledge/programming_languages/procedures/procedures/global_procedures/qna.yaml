version: 2
task_description: Explain the features and creation process of global procedures in Actian 4GL SQL.
created_by: connorgilchrist99
domain: sql_actian_4gl
seed_examples:
  - question: What is a global 4GL procedure in OpenROAD?
    answer: |
      A global 4GL procedure is a routine written in 4GL that can be called by name from a script or another procedure. It is a component of an application and is stored in the application's database.

  - question: How do you create a global 4GL procedure in OpenROAD?
    answer: |
      To create a global 4GL procedure:
      1. Use the OpenROAD Workbench to name the procedure and declare its return value.
      2. Write the actual procedure statement in 4GL.

  - question: What is the syntax for defining a global 4GL procedure in OpenROAD?
    answer: |
      The syntax for a global 4GL procedure is:
      ```
      procedure procname [([parameterlist])] =
      [declare
           [localvariablelist]
           [localprocedureforwardreferences]
      enddeclare]]
      begin
           statementlist
      end[;]
      {localprocedure[;]}
      ```

  - question: What is the purpose of the `procname` in the procedure statement?
    answer: |
      `procname` specifies the name of the procedure. This name is used to call the procedure in the application.

  - question: What is the purpose of the `parameterlist` in a procedure statement?
    answer: |
      The `parameterlist` specifies parameters that are passed to the procedure. These parameters can also be used as local variables within the procedure. A procedure can have any number of parameters.

  - question: What types of parameters can be included in the `parameterlist`?
    answer: |
      Parameters can be any simple data type acceptable to OpenROAD or any named user class or system class. If a procedure has no parameters, the parentheses are optional.

  - question: What is included in the `statementlist` of a procedure?
    answer: |
      The `statementlist` includes any OpenROAD statement that defines the actual processing logic of the procedure.

  - question: How do you return a value from a procedure?
    answer: |
      Use the `return` statement to return control to the calling script or procedure, optionally passing a single value back. The returned value must match the return value data type specified when the procedure was created.

  - question: Can you provide an example of using a procedure that returns a value in an expression?
    answer: |
      ```
      returnfield = square_root(number = 36) * 5;
      ```

  - question: How can a procedure that returns a value be used as a parameter in another procedure?
    answer: |
      ```
      returnfield = p (arg1 = square_root(number = 17));
      ```

  - question: How do you call a procedure using the value found in a variable for the procedure name?
    answer: |
      ```
      result = :procfield (x = 5, y = price);
      ```

  - question: Where can you find more information about the callproc statement in OpenROAD?
    answer: |
      For more information about the callproc statement, see the Language Reference Guide online help.

document:
  repo: https://github.com/nicklamb97/instructlab-data.git
  commit: 1c38afb
  patterns:
    - global_procedures.md
