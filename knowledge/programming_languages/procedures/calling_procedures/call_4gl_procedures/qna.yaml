version: 2
task_description: Explain how you can call 4GL procedures in Actian 4GL.
created_by: guyvernon
domain: sql_actian_4gl
seed_examples:
  - question: What is the syntax for callproc statements for calling a 4GL procedure with no return value or parameters?
    answer: |
      The basic syntax for calling a 4GL procedure with no return value or parameters is:
      ```
      callproc procedurename
      ```
  - question: How do you specify the name of the 4GL procedure in the callproc statement?
    answer: |
      You can specify the procedure name directly or use a variable to dynamically specify the procedure name at
      runtime.
  - question: How can you call a 4GL procedure and receive a return value?
    answer: |
      When the procedure returns a value, you must specify a variable in the calling frame or procedure to receive the
      return value. The syntax is:
      ```
      [return_variable =] callproc procedurename
      ```
  - question: How do you pass parameters to a 4GL procedure in the callproc statement?
    answer: |
      To pass parameters to a 4GL procedure, use the following syntax:
      ```
      [return_variable =] callproc procedurename [(parameter = expression {, parameter = expression})]
      ```
  - question: Can parameters in the callproc statement be passed in any order?
    answer: |
      Yes, parameters can be passed in any order because they are specified by name rather than by position.
  - question: What types of expressions can be used for parameters in the callproc statement?
    answer: |
      The expression can be a constant or any legal OpenROAD expression, as long as the resulting data type is
      compatible with the data type of the local variable in the procedure.
  - question: What happens to variables not specified in the parameter list of the callproc statement?
    answer: |
      Any variable in the procedure that you do not specify in the parameter list is set to its default value.
  - question: How are parameters passed by value and by reference in the callproc statement?
    answer: |
      Parameters can be passed by value and by reference. The value of the referenced variable is not updated until the
      called procedure returns.
  - question: How can you ensure that a field associated with a variable updates its value before the event block ends?
    answer: |
      You can use the Flush method immediately after the callproc statement to update the value before the end of the
      event block.
  - question: Can you provide an example of calling a 4GL procedure with parameters?
    answer: |
      Here is an example of calling a procedure that removes a row from the video_detail frame:
      ```
      callproc remove_new_detail(new_details_frames = new_details_frames, details_frame = video.details_frame);
      ```

document:
  repo: https://github.com/nicklamb97/instructlab-data.git
  commit: 928d676
  patterns:
    - call_4gl_procedures.md
