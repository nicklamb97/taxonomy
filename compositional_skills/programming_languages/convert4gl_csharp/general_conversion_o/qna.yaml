version: 2
task_description: Learn about converting Actian 4GL code for OpenROAD to C#.
created_by: nicklamb97
seed_examples:
  - question: "How would you convert this 4GL Select statement to C#? Respond only in code:
    SELECT model_id, model_name, architecture_type FROM ai_models WHERE training_completion_date > '2024-01-01';"
    answer: |
      using (SqlConnection connection = new SqlConnection(connectionString))
      {
          connection.Open();
          using (SqlCommand command = new SqlCommand(
              "SELECT model_id, model_name, architecture_type FROM ai_models
              WHERE training_completion_date > @completionDate",
              connection))
          {
              command.Parameters.AddWithValue("@completionDate", new DateTime(2024, 1, 1));
              using (SqlDataReader reader = command.ExecuteReader())
              {
                  while (reader.Read())
                  {
                      int modelId = (int)reader["model_id"];
                      string modelName = reader["model_name"].ToString();
                      string architectureType = reader["architecture_type"].ToString();
                      // Process AI model data
                  }
              }
          }
      }

  - question: "Convert this 4GL Insert statement to C#. Respond only in code:
    INSERT INTO training_datasets (dataset_name, data_source, record_count, last_updated)
    VALUES ('ImageNet2024', 'External API', 1000000, CURRENT);"
    answer: |
      using (SqlConnection connection = new SqlConnection(connectionString))
      {
          connection.Open();
          using (SqlCommand command = new SqlCommand(
              "INSERT INTO training_datasets (dataset_name, data_source, record_count, last_updated)
              VALUES (@datasetName, @dataSource, @recordCount, @lastUpdated)",
              connection))
          {
              command.Parameters.AddWithValue("@datasetName", "ImageNet2024");
              command.Parameters.AddWithValue("@dataSource", "External API");
              command.Parameters.AddWithValue("@recordCount", 1000000);
              command.Parameters.AddWithValue("@lastUpdated", DateTime.Now);
              command.ExecuteNonQuery();
          }
      }

  - question: "How would you convert this 4GL Update statement to C#? Respond only in code:
    UPDATE neural_networks SET accuracy = 0.95, last_evaluation_date = CURRENT WHERE network_id = 1234;"
    answer: |
      using (SqlConnection connection = new SqlConnection(connectionString))
      {
          connection.Open();
          using (SqlCommand command = new SqlCommand(
              "UPDATE neural_networks SET accuracy = @accuracy, last_evaluation_date = @evaluationDate
              WHERE network_id = @networkId",
              connection))
          {
              command.Parameters.AddWithValue("@accuracy", 0.95);
              command.Parameters.AddWithValue("@evaluationDate", DateTime.Now);
              command.Parameters.AddWithValue("@networkId", 1234);
              command.ExecuteNonQuery();
          }
      }

  - question: "Convert this 4GL Delete statement to C#. Respond only in code:
    DELETE FROM training_iterations WHERE model_id = 5678 AND iteration_performance < 0.5;"
    answer: |
      using (SqlConnection connection = new SqlConnection(connectionString))
      {
          connection.Open();
          using (SqlCommand command = new SqlCommand(
              "DELETE FROM training_iterations WHERE model_id = @modelId AND iteration_performance < @performance",
              connection))
          {
              command.Parameters.AddWithValue("@modelId", 5678);
              command.Parameters.AddWithValue("@performance", 0.5);
              command.ExecuteNonQuery();
          }
      }

  - question: "How would you handle this 4GL transaction in C#? Respond only in code:
    BEGIN WORK;
    UPDATE ai_models SET status = 'Training' WHERE model_id = 101;
    INSERT INTO training_logs (model_id, start_time, batch_size) VALUES (101, CURRENT, 64);
    COMMIT WORK;"
    answer: |
      using (SqlConnection connection = new SqlConnection(connectionString))
      {
          connection.Open();
          using (SqlTransaction transaction = connection.BeginTransaction())
          {
              try
              {
                  using (SqlCommand command = new SqlCommand(
                      "UPDATE ai_models SET status = @status WHERE model_id = @modelId",
                      connection, transaction))
                  {
                      command.Parameters.AddWithValue("@status", "Training");
                      command.Parameters.AddWithValue("@modelId", 101);
                      command.ExecuteNonQuery();
                  }

                  using (SqlCommand command = new SqlCommand(
                      "INSERT INTO training_logs (model_id, start_time, batch_size)
                      VALUES (@modelId, @startTime, @batchSize)",
                      connection, transaction))
                  {
                      command.Parameters.AddWithValue("@modelId", 101);
                      command.Parameters.AddWithValue("@startTime", DateTime.Now);
                      command.Parameters.AddWithValue("@batchSize", 64);
                      command.ExecuteNonQuery();
                  }

                  transaction.Commit();
              }
              catch
              {
                  transaction.Rollback();
                  throw;
              }
          }
      }

  - question: "Convert this 4GL error handling to C#. Respond only in code:
    WHENEVER ERROR RAISE
    BEGIN
        LET error_log = 'Error in AI system: ' || SQLERRM;
        INSERT INTO system_logs (log_message, log_date) VALUES (error_log, CURRENT);
        RAISE EXCEPTION error_log;
    END"
    answer: |
      try
      {
          // AI system operations
      }
      catch (SqlException ex)
      {
          string errorLog = "Error in AI system: " + ex.Message;
          using (SqlConnection connection = new SqlConnection(connectionString))
          {
              connection.Open();
              using (SqlCommand command = new SqlCommand(
                  "INSERT INTO system_logs (log_message, log_date) VALUES (@logMessage, @logDate)",
                  connection))
              {
                  command.Parameters.AddWithValue("@logMessage", errorLog);
                  command.Parameters.AddWithValue("@logDate", DateTime.Now);
                  command.ExecuteNonQuery();
              }
          }
          throw new Exception(errorLog);
      }

  - question: "How would you convert this 4GL FOR loop to C#? Respond only in code:
    FOR model IN SELECT model_id, model_name, accuracy FROM ai_models WHERE architecture_type = 'Transformer'
        DISPLAY model.model_id, model.model_name, model.accuracy;
    END FOR;"
    answer: |
      using (SqlConnection connection = new SqlConnection(connectionString))
      {
          connection.Open();
          using (SqlCommand command = new SqlCommand(
              "SELECT model_id, model_name, accuracy FROM ai_models WHERE architecture_type = @architectureType",
              connection))
          {
              command.Parameters.AddWithValue("@architectureType", "Transformer");
              using (SqlDataReader reader = command.ExecuteReader())
              {
                  while (reader.Read())
                  {
                      int modelId = (int)reader["model_id"];
                      string modelName = reader["model_name"].ToString();
                      double accuracy = (double)reader["accuracy"];
                      Console.WriteLine($"{modelId} {modelName} {accuracy:F2}");
                  }
              }
          }
      }

  - question: "Convert this 4GL WHILE loop to C#. Respond only in code:
    LET epochs = 100
    WHILE epochs > 0
        DISPLAY 'Training epoch:', 101 - epochs
        LET epochs = epochs - 1
    END WHILE;"
    answer: |
      int epochs = 100;
      while (epochs > 0)
      {
          Console.WriteLine($"Training epoch: {101 - epochs}");
          epochs--;
      }

  - question: "How would you convert this 4GL conditional statement to C#? Respond only in code:
    IF model_performance > 0.95 THEN
        LET model_status = 'Excellent'
    ELIF model_performance > 0.80 THEN
        LET model_status = 'Good'
    ELSE
        LET model_status = 'Needs Improvement'
    END IF;"
    answer: |
      string modelStatus;
      if (modelPerformance > 0.95)
      {
          modelStatus = "Excellent";
      }
      else if (modelPerformance > 0.80)
      {
          modelStatus = "Good";
      }
      else
      {
          modelStatus = "Needs Improvement";
      }

  - question: "Convert this 4GL string concatenation to C#. Respond only in code:
    LET model_summary = model_name || ' (' || architecture_type || ') - Accuracy: ' || TO_CHAR(accuracy, '0.99');"
    answer: |
      string modelSummary = modelName + " (" + architectureType + ") - Accuracy: " + accuracy.ToString("0.00");

  - question: "How would you convert this 4GL function call to C#? Respond only in code:
    FUNCTION calculate_training_time(p_dataset_size INTEGER, p_model_complexity FLOAT) RETURNS FLOAT
        RETURN (p_dataset_size * p_model_complexity) / 1000000
    END FUNCTION

    LET estimated_time = calculate_training_time(1000000, 2.5);"
    answer: |
      public float CalculateTrainingTime(int datasetSize, float modelComplexity)
      {
          return (datasetSize * modelComplexity) / 1000000f;
      }

      // Usage
      float estimatedTime = CalculateTrainingTime(1000000, 2.5f);
