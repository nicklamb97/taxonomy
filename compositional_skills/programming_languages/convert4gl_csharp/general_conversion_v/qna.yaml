version: 2
task_description: Learn about converting Actian 4GL DELETE statements for OpenROAD to C#.
created_by: nicklamb97
seed_examples:
  - question: "How would you convert the following 4GL Delete statement into C#? Respond only in code:
    DELETE FROM customers WHERE customer_id = 123;"
    answer: |
      using (SqlConnection connection = new SqlConnection(connectionString))
      {
          connection.Open();
          using (SqlCommand command = new SqlCommand(
              "DELETE FROM customers WHERE customer_id = @CustomerId",
              connection))
          {
              command.Parameters.AddWithValue("@CustomerId", 123);
              command.ExecuteNonQuery();
          }
      }

  - question: "How would you convert the following 4GL Delete statement into C#? Respond only in code:
    DELETE FROM orders WHERE status = 'Cancelled';"
    answer: |
      using (SqlConnection connection = new SqlConnection(connectionString))
      {
          connection.Open();
          using (SqlCommand command = new SqlCommand(
              "DELETE FROM orders WHERE status = @Status",
              connection))
          {
              command.Parameters.AddWithValue("@Status", "Cancelled");
              command.ExecuteNonQuery();
          }
      }

  - question: "How would you convert the following 4GL Delete statement into C#? Respond only in code:
    DELETE FROM employees WHERE hire_date < '2020-01-01';"
    answer: |
      using (SqlConnection connection = new SqlConnection(connectionString))
      {
          connection.Open();
          using (SqlCommand command = new SqlCommand(
              "DELETE FROM employees WHERE hire_date < @HireDate",
              connection))
          {
              command.Parameters.AddWithValue("@HireDate", new DateTime(2020, 1, 1));
              command.ExecuteNonQuery();
          }
      }

  - question: "How would you convert the following 4GL Delete statement into C#? Respond only in code:
    DELETE FROM products WHERE category = 'Discontinued';"
    answer: |
      using (SqlConnection connection = new SqlConnection(connectionString))
      {
          connection.Open();
          using (SqlCommand command = new SqlCommand(
              "DELETE FROM products WHERE category = @Category",
              connection))
          {
              command.Parameters.AddWithValue("@Category", "Discontinued");
              command.ExecuteNonQuery();
          }
      }

  - question: "How would you convert the following 4GL Delete statement into C#? Respond only in code:
    DELETE FROM bookings WHERE booking_date < '2024-06-01';"
    answer: |
      using (SqlConnection connection = new SqlConnection(connectionString))
      {
          connection.Open();
          using (SqlCommand command = new SqlCommand(
              "DELETE FROM bookings WHERE booking_date < @BookingDate",
              connection))
          {
              command.Parameters.AddWithValue("@BookingDate", new DateTime(2024, 6, 1));
              command.ExecuteNonQuery();
          }
      }

  - question: "How would you convert the following 4GL Delete statement into C#? Respond only in code:
    DELETE FROM invoices WHERE due_date < '2024-01-01';"
    answer: |
      using (SqlConnection connection = new SqlConnection(connectionString))
      {
          connection.Open();
          using (SqlCommand command = new SqlCommand(
              "DELETE FROM invoices WHERE due_date < @DueDate",
              connection))
          {
              command.Parameters.AddWithValue("@DueDate", new DateTime(2024, 1, 1));
              command.ExecuteNonQuery();
          }
      }

  - question: "How would you convert the following 4GL Delete statement into C#? Respond only in code:
    DELETE FROM shipments WHERE shipment_id = 789;"
    answer: |
      using (SqlConnection connection = new SqlConnection(connectionString))
      {
          connection.Open();
          using (SqlCommand command = new SqlCommand(
              "DELETE FROM shipments WHERE shipment_id = @ShipmentId",
              connection))
          {
              command.Parameters.AddWithValue("@ShipmentId", 789);
              command.ExecuteNonQuery();
          }
      }

  - question: "How would you convert the following 4GL Delete statement into C#? Respond only in code:
    DELETE FROM feedback WHERE feedback_id = 204;"
    answer: |
      using (SqlConnection connection = new SqlConnection(connectionString))
      {
          connection.Open();
          using (SqlCommand command = new SqlCommand(
              "DELETE FROM feedback WHERE feedback_id = @FeedbackId",
              connection))
          {
              command.Parameters.AddWithValue("@FeedbackId", 204);
              command.ExecuteNonQuery();
          }
      }

  - question: "How would you convert the following 4GL Delete statement into C#? Respond only in code:
    DELETE FROM projects WHERE project_id = 500;"
    answer: |
      using (SqlConnection connection = new SqlConnection(connectionString))
      {
          connection.Open();
          using (SqlCommand command = new SqlCommand(
              "DELETE FROM projects WHERE project_id = @ProjectId",
              connection))
          {
              command.Parameters.AddWithValue("@ProjectId", 500);
              command.ExecuteNonQuery();
          }
      }

  - question: "How would you convert the following 4GL Delete statement into C#? Respond only in code:
    DELETE FROM clients WHERE client_id = 456;"
    answer: |
      using (SqlConnection connection = new SqlConnection(connectionString))
      {
          connection.Open();
          using (SqlCommand command = new SqlCommand(
              "DELETE FROM clients WHERE client_id = @ClientId",
              connection))
          {
              command.Parameters.AddWithValue("@ClientId", 456);
              command.ExecuteNonQuery();
          }
      }

  - question: "How would you convert the following 4GL Delete statement into C#? Respond only in code:
    DELETE FROM inventory WHERE item_id = 789;"
    answer: |
      using (SqlConnection connection = new SqlConnection(connectionString))
      {
          connection.Open();
          using (SqlCommand command = new SqlCommand(
              "DELETE FROM inventory WHERE item_id = @ItemId",
              connection))
          {
              command.Parameters.AddWithValue("@ItemId", 789);
              command.ExecuteNonQuery();
          }
      }

  - question: "How would you convert the following 4GL Delete statement into C#? Respond only in code:
    DELETE FROM transactions WHERE transaction_date < '2024-01-01';"
    answer: |
      using (SqlConnection connection = new SqlConnection(connectionString))
      {
          connection.Open();
          using (SqlCommand command = new SqlCommand(
              "DELETE FROM transactions WHERE transaction_date < @TransactionDate",
              connection))
          {
              command.Parameters.AddWithValue("@TransactionDate", new DateTime(2024, 1, 1));
              command.ExecuteNonQuery();
          }
      }

  - question: "How would you convert the following 4GL Delete statement into C#? Respond only in code:
    DELETE FROM orders WHERE order_date < '2024-06-01';"
    answer: |
      using (SqlConnection connection = new SqlConnection(connectionString))
      {
          connection.Open();
          using (SqlCommand command = new SqlCommand(
              "DELETE FROM orders WHERE order_date < @OrderDate",
              connection))
          {
              command.Parameters.AddWithValue("@OrderDate", new DateTime(2024, 6, 1));
              command.ExecuteNonQuery();
          }
      }

  - question: "How would you convert the following 4GL Delete statement into C#? Respond only in code:
    DELETE FROM employees WHERE department = 'Marketing';"
    answer: |
      using (SqlConnection connection = new SqlConnection(connectionString))
      {
          connection.Open();
          using (SqlCommand command = new SqlCommand(
              "DELETE FROM employees WHERE department = @Department",
              connection))
          {
              command.Parameters.AddWithValue("@Department", "Marketing");
              command.ExecuteNonQuery();
          }
      }

  - question: "How would you convert the following 4GL Delete statement into C#? Respond only in code:
    DELETE FROM customers WHERE last_purchase_date < '2023-12-31';"
    answer: |
      using (SqlConnection connection = new SqlConnection(connectionString))
      {
          connection.Open();
          using (SqlCommand command = new SqlCommand(
              "DELETE FROM customers WHERE last_purchase_date < @LastPurchaseDate",
              connection))
          {
              command.Parameters.AddWithValue("@LastPurchaseDate", new DateTime(2023, 12, 31));
              command.ExecuteNonQuery();
          }
      }

  - question: "How would you convert the following 4GL Delete statement into C#? Respond only in code:
    DELETE FROM orders WHERE order_id = 1001;"
    answer: |
      using (SqlConnection connection = new SqlConnection(connectionString))
      {
          connection.Open();
          using (SqlCommand command = new SqlCommand(
              "DELETE FROM orders WHERE order_id = @OrderId",
              connection))
          {
              command.Parameters.AddWithValue("@OrderId", 1001);
              command.ExecuteNonQuery();
          }
      }

  - question: "How would you convert the following 4GL Delete statement into C#? Respond only in code:
    DELETE FROM logs WHERE log_date < '2024-01-01';"
    answer: |
      using (SqlConnection connection = new SqlConnection(connectionString))
      {
          connection.Open();
          using (SqlCommand command = new SqlCommand(
              "DELETE FROM logs WHERE log_date < @LogDate",
              connection))
          {
              command.Parameters.AddWithValue("@LogDate", new DateTime(2024, 1, 1));
              command.ExecuteNonQuery();
          }
      }

  - question: "How would you convert the following 4GL Delete statement into C#? Respond only in code:
    DELETE FROM projects WHERE status = 'Archived';"
    answer: |
      using (SqlConnection connection = new SqlConnection(connectionString))
      {
          connection.Open();
          using (SqlCommand command = new SqlCommand(
              "DELETE FROM projects WHERE status = @Status",
              connection))
          {
              command.Parameters.AddWithValue("@Status", "Archived");
              command.ExecuteNonQuery();
          }
      }
