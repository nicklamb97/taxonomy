version: 2
task_description: Learn about converting Actian 4GL UPDATE statements for OpenROAD to C#.
created_by: nicklamb97
seed_examples:
  - question: "How would you convert the following 4GL Update statement into C#? Respond only in code:
    UPDATE customers SET email = 'newemail@example.com' WHERE customer_id = 1;"
    answer: |
      using (SqlConnection connection = new SqlConnection(connectionString))
      {
          connection.Open();
          using (SqlCommand command = new SqlCommand(
              "UPDATE customers SET email = @Email WHERE customer_id = @CustomerId",
              connection))
          {
              command.Parameters.AddWithValue("@Email", "newemail@example.com");
              command.Parameters.AddWithValue("@CustomerId", 1);
              command.ExecuteNonQuery();
          }
      }

  - question: "How would you convert the following 4GL Update statement into C#? Respond only in code:
    UPDATE orders SET status = 'Shipped' WHERE order_id = 1002;"
    answer: |
      using (SqlConnection connection = new SqlConnection(connectionString))
      {
          connection.Open();
          using (SqlCommand command = new SqlCommand(
              "UPDATE orders SET status = @Status WHERE order_id = @OrderId",
              connection))
          {
              command.Parameters.AddWithValue("@Status", "Shipped");
              command.Parameters.AddWithValue("@OrderId", 1002);
              command.ExecuteNonQuery();
          }
      }

  - question: "How would you convert the following 4GL Update statement into C#? Respond only in code:
    UPDATE employees SET salary = salary * 1.05 WHERE department = 'Sales';"
    answer: |
      using (SqlConnection connection = new SqlConnection(connectionString))
      {
          connection.Open();
          using (SqlCommand command = new SqlCommand(
              "UPDATE employees SET salary = salary * 1.05 WHERE department = @Department",
              connection))
          {
              command.Parameters.AddWithValue("@Department", "Sales");
              command.ExecuteNonQuery();
          }
      }

  - question: "How would you convert the following 4GL Update statement into C#? Respond only in code:
    UPDATE products SET price = price + 10 WHERE category = 'Electronics';"
    answer: |
      using (SqlConnection connection = new SqlConnection(connectionString))
      {
          connection.Open();
          using (SqlCommand command = new SqlCommand(
              "UPDATE products SET price = price + 10 WHERE category = @Category",
              connection))
          {
              command.Parameters.AddWithValue("@Category", "Electronics");
              command.ExecuteNonQuery();
          }
      }

  - question: "How would you convert the following 4GL Update statement into C#? Respond only in code:
    UPDATE bookings SET check_out_date = '2024-08-10' WHERE booking_id = 2024;"
    answer: |
      using (SqlConnection connection = new SqlConnection(connectionString))
      {
          connection.Open();
          using (SqlCommand command = new SqlCommand(
              "UPDATE bookings SET check_out_date = @CheckOutDate WHERE booking_id = @BookingId",
              connection))
          {
              command.Parameters.AddWithValue("@CheckOutDate", new DateTime(2024, 8, 10));
              command.Parameters.AddWithValue("@BookingId", 2024);
              command.ExecuteNonQuery();
          }
      }

  - question: "How would you convert the following 4GL Update statement into C#? Respond only in code:
    UPDATE invoices SET status = 'Paid' WHERE invoice_id = 3001;"
    answer: |
      using (SqlConnection connection = new SqlConnection(connectionString))
      {
          connection.Open();
          using (SqlCommand command = new SqlCommand(
              "UPDATE invoices SET status = @Status WHERE invoice_id = @InvoiceId",
              connection))
          {
              command.Parameters.AddWithValue("@Status", "Paid");
              command.Parameters.AddWithValue("@InvoiceId", 3001);
              command.ExecuteNonQuery();
          }
      }

  - question: "How would you convert the following 4GL Update statement into C#? Respond only in code:
    UPDATE shipments SET delivery_date = '2024-09-20' WHERE shipment_id = 789;"
    answer: |
      using (SqlConnection connection = new SqlConnection(connectionString))
      {
          connection.Open();
          using (SqlCommand command = new SqlCommand(
              "UPDATE shipments SET delivery_date = @DeliveryDate WHERE shipment_id = @ShipmentId",
              connection))
          {
              command.Parameters.AddWithValue("@DeliveryDate", new DateTime(2024, 9, 20));
              command.Parameters.AddWithValue("@ShipmentId", 789);
              command.ExecuteNonQuery();
          }
      }

  - question: "How would you convert the following 4GL Update statement into C#? Respond only in code:
    UPDATE courses SET credits = 5 WHERE course_id = 303;"
    answer: |
      using (SqlConnection connection = new SqlConnection(connectionString))
      {
          connection.Open();
          using (SqlCommand command = new SqlCommand(
              "UPDATE courses SET credits = @Credits WHERE course_id = @CourseId",
              connection))
          {
              command.Parameters.AddWithValue("@Credits", 5);
              command.Parameters.AddWithValue("@CourseId", 303);
              command.ExecuteNonQuery();
          }
      }

  - question: "How would you convert the following 4GL Update statement into C#? Respond only in code:
    UPDATE students SET name = 'Jane Doe' WHERE student_id = 5001;"
    answer: |
      using (SqlConnection connection = new SqlConnection(connectionString))
      {
          connection.Open();
          using (SqlCommand command = new SqlCommand(
              "UPDATE students SET name = @Name WHERE student_id = @StudentId",
              connection))
          {
              command.Parameters.AddWithValue("@Name", "Jane Doe");
              command.Parameters.AddWithValue("@StudentId", 5001);
              command.ExecuteNonQuery();
          }
      }

  - question: "How would you convert the following 4GL Update statement into C#? Respond only in code:
    UPDATE transactions SET amount = amount - 50 WHERE transaction_id = 9002;"
    answer: |
      using (SqlConnection connection = new SqlConnection(connectionString))
      {
          connection.Open();
          using (SqlCommand command = new SqlCommand(
              "UPDATE transactions SET amount = amount - @Amount WHERE transaction_id = @TransactionId",
              connection))
          {
              command.Parameters.AddWithValue("@Amount", 50);
              command.Parameters.AddWithValue("@TransactionId", 9002);
              command.ExecuteNonQuery();
          }
      }

  - question: "How would you convert the following 4GL Update statement into C#? Respond only in code:
    UPDATE departments SET manager = 'Steve Martin' WHERE department_id = 10;"
    answer: |
      using (SqlConnection connection = new SqlConnection(connectionString))
      {
          connection.Open();
          using (SqlCommand command = new SqlCommand(
              "UPDATE departments SET manager = @Manager WHERE department_id = @DepartmentId",
              connection))
          {
              command.Parameters.AddWithValue("@Manager", "Steve Martin");
              command.Parameters.AddWithValue("@DepartmentId", 10);
              command.ExecuteNonQuery();
          }
      }

  - question: "How would you convert the following 4GL Update statement into C#? Respond only in code:
    UPDATE feedback SET comment = 'Excellent service!' WHERE feedback_id = 204;"
    answer: |
      using (SqlConnection connection = new SqlConnection(connectionString))
      {
          connection.Open();
          using (SqlCommand command = new SqlCommand(
              "UPDATE feedback SET comment = @Comment WHERE feedback_id = @FeedbackId",
              connection))
          {
              command.Parameters.AddWithValue("@Comment", "Excellent service!");
              command.Parameters.AddWithValue("@FeedbackId", 204);
              command.ExecuteNonQuery();
          }
      }

  - question: "How would you convert the following 4GL Update statement into C#? Respond only in code:
    UPDATE projects SET status = 'Completed' WHERE project_id = 500;"
    answer: |
      using (SqlConnection connection = new SqlConnection(connectionString))
      {
          connection.Open();
          using (SqlCommand command = new SqlCommand(
              "UPDATE projects SET status = @Status WHERE project_id = @ProjectId",
              connection))
          {
              command.Parameters.AddWithValue("@Status", "Completed");
              command.Parameters.AddWithValue("@ProjectId", 500);
              command.ExecuteNonQuery();
          }
      }

  - question: "How would you convert the following 4GL Update statement into C#? Respond only in code:
    UPDATE employees SET department = 'IT' WHERE salary < 40000;"
    answer: |
      using (SqlConnection connection = new SqlConnection(connectionString))
      {
          connection.Open();
          using (SqlCommand command = new SqlCommand(
              "UPDATE employees SET department = @Department WHERE salary < @Salary",
              connection))
          {
              command.Parameters.AddWithValue("@Department", "IT");
              command.Parameters.AddWithValue("@Salary", 40000);
              command.ExecuteNonQuery();
          }
      }

  - question: "How would you convert the following 4GL Update statement into C#? Respond only in code:
    UPDATE sales SET total_amount = total_amount + 500 WHERE sales_id = 2001;"
    answer: |
      using (SqlConnection connection = new SqlConnection(connectionString))
      {
          connection.Open();
          using (SqlCommand command = new SqlCommand(
              "UPDATE sales SET total_amount = total_amount + @Amount WHERE sales_id = @SalesId",
              connection))
          {
              command.Parameters.AddWithValue("@Amount", 500);
              command.Parameters.AddWithValue("@SalesId", 2001);
              command.ExecuteNonQuery();
          }
      }

  - question: "How would you convert the following 4GL Update statement into C#? Respond only in code:
    UPDATE clients SET address = '123 New Street' WHERE client_id = 456;"
    answer: |
      using (SqlConnection connection = new SqlConnection(connectionString))
      {
          connection.Open();
          using (SqlCommand command = new SqlCommand(
              "UPDATE clients SET address = @Address WHERE client_id = @ClientId",
              connection))
          {
              command.Parameters.AddWithValue("@Address", "123 New Street");
              command.Parameters.AddWithValue("@ClientId", 456);
              command.ExecuteNonQuery();
          }
      }

  - question: "How would you convert the following 4GL Update statement into C#? Respond only in code:
    UPDATE inventory SET quantity = quantity - 5 WHERE item_id = 789;"
    answer: |
      using (SqlConnection connection = new SqlConnection(connectionString))
      {
          connection.Open();
          using (SqlCommand command = new SqlCommand(
              "UPDATE inventory SET quantity = quantity - @Quantity WHERE item_id = @ItemId",
              connection))
          {
              command.Parameters.AddWithValue("@Quantity", 5);
              command.Parameters.AddWithValue("@ItemId", 789);
              command.ExecuteNonQuery();
          }
      }

  - question: "How would you convert the following 4GL Update statement into C#? Respond only in code:
    UPDATE transactions SET status = 'Completed' WHERE transaction_date < '2024-01-01';"
    answer: |
      using (SqlConnection connection = new SqlConnection(connectionString))
      {
          connection.Open();
          using (SqlCommand command = new SqlCommand(
              "UPDATE transactions SET status = @Status WHERE transaction_date < @TransactionDate",
              connection))
          {
              command.Parameters.AddWithValue("@Status", "Completed");
              command.Parameters.AddWithValue("@TransactionDate", new DateTime(2024, 1, 1));
              command.ExecuteNonQuery();
          }
      }
