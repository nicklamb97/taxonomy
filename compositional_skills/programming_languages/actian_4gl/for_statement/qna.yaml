version: 2
task_description: Write Actian 4GL OpenROAD For Statements
created_by: willsjames
seed_examples:
  - question: >-
      How to use a basic for loop to iterate through an array in Actian 4GL OpenROAD For Statement?
    answer: |
      Here's a basic for loop to iterate through an array:
      ```
      for i = 1 to array.Lastrow do
          arr[i].PaymentReceived = TRUE;
      endfor;
      ```
      This loop sets PaymentReceived to TRUE for each element in the array.

  - question: >-
      Write code to demonstrate the use of the downto keyword in an Actian 4GL OpenROAD For Statement.
    answer: |
      Here's a for loop using the downto keyword:
      ```
      for i = 10 downto 1 do
          message 'Countdown: ' || char(i);
      endfor;
      ```
      This loop counts down from 10 to 1, displaying each number.

  - question: >-
      How to break out of a for loop using the endloop statement in Actian 4GL OpenROAD For Statement?
    answer: |
      Here's how to use endloop to break out of a for loop:
      ```
      for i = 1 to arr.Lastrow do
          if arr[i].Name = '' then
              endloop;
          endif;
          /* Process non-empty names */
      endfor;
      ```
      This loop breaks out immediately when an empty name is encountered.

  - question: >-
      Write code to demonstrate the use of the continue statement in an Actian 4GL OpenROAD For Statement.
    answer: |
      Here's how to use the continue statement in a for loop:
      ```
      for i = 1 to arr.Lastrow do
          if arr[i].Name = '' then
              continue;
          endif;
          /* Process non-empty names */
      endfor;
      ```
      This loop skips processing for empty names and continues with the next iteration.

  - question: How to use nested for loops with labels in Actian 4GL OpenROAD For Statement?
    answer: |
      Here's an example of nested for loops with labels:
      ```
      label1: for i = 1 to arr1.Lastrow do
          label2: for j = 1 to arr2.Lastrow do
              if arr.Name = '' then
                  endloop label1;
              elseif arr.FullTime = FALSE then
                  endloop label2;
              endif;
          endfor;
      endfor;
      ```
      This code demonstrates nested loops with labeled endloop statements.

  - question: >-
      Write code to show how the endexpression is re-evaluated in each iteration of an Actian 4GL OpenROAD
      For Statement.
    answer: |
      Here's an example showing endexpression re-evaluation:
      ```
      max_value = 10;
      for i = 1 to max_value do
          message 'Current value: ' || char(i);
          if i = 5 then
              max_value = 15;  /* Extends the loop */
          endif;
      endfor;
      ```
      This loop demonstrates how changing max_value affects the loop's end condition.

  - question: >-
      How to use the resume statement to terminate both the loop and the current event block in Actian 4GL
      OpenROAD For Statement?
    answer: |
      Here's how to use the resume statement:
      ```
      for i = 1 to arr.Lastrow do
          if arr[i].ErrorCondition = TRUE then
              message 'Error found. Terminating process.';
              resume;
          endif;
          /* Process normal conditions */
      endfor;
      ```
      This loop terminates both the loop and the current event block if an error condition is found.

  - question: Write code to demonstrate error handling within an Actian 4GL OpenROAD For Statement.
    answer: |
      Here's an example of error handling in a for loop:
      ```
      for i = 1 to arr.Lastrow do
          if arr[i].Value < 0 then
              message 'Error: Negative value found at index ' || char(i);
              arr[i].Value = 0;  /* Reset to valid value */
          endif;
          /* Continue processing */
      endfor;
      ```
      This loop checks for and handles negative values in the array.

  - question: How to use a for loop to perform a calculation in Actian 4GL OpenROAD For Statement?
    answer: |
      Here's a for loop performing a calculation:
      ```
      total = 0;
      for i = 1 to salesArray.Lastrow do
          total = total + salesArray[i].Amount;
      endfor;
      average = total / salesArray.Lastrow;
      ```
      This loop calculates the total and average of sales amounts.

  - question: >-
      Write code to show how a for loop might not execute at all in Actian 4GL OpenROAD For Statement.
    answer: |
      Here's an example where a for loop might not execute:
      ```
      startValue = 10;
      endValue = 5;
      for i = startValue to endValue do
          message 'This will not be displayed';
      endfor;
      message 'Loop did not execute';
      ```
      In this case, the loop doesn't execute because startValue is greater than endValue.

  - question: >-
      How to use the indexvariable within the loop body for different purposes in Actian 4GL OpenROAD For
      Statement?
    answer: |
      Here's how to use the indexvariable for different purposes:
      ```
      for i = 1 to 10 do
          if i mod 2 = 0 then
              message 'Even number: ' || char(i);
          else
              message 'Odd number: ' || char(i);
          endif;
          arr[i].Position = i * 10;
      endfor;
      ```
      This loop uses the indexvariable for conditionals and calculations.

  - question: >-
      Write code to demonstrate breaking out of nested loops using labeled endloop in Actian 4GL OpenROAD
      For Statement.
    answer: |
      Here's how to break out of nested loops using labeled endloop:
      ```
      outer: for i = 1 to 5 do
          inner: for j = 1 to 5 do
              if i * j > 10 then
                  message 'Breaking out of both loops';
                  endloop outer;
              endif;
              message 'i = ' || char(i) || ', j = ' || char(j);
          endfor;
      endfor;
      ```
      This code breaks out of both loops when their product exceeds 10.

  - question: >-
      How to use the continue statement with labels in nested loops in Actian 4GL OpenROAD For Statement?
    answer: |
      Here's how to use continue with labels in nested loops:
      ```
      outer: for i = 1 to 5 do
          inner: for j = 1 to 5 do
              if j = 3 then
                  continue outer;
              endif;
              message 'i = ' || char(i) || ', j = ' || char(j);
          endfor;
      endfor;
      ```
      This code skips to the next iteration of the outer loop when j equals 3.

  - question: >-
      Write code to show how the indexvariable's value is undefined upon exit from an Actian 4GL OpenROAD
      For Statement.
    answer: |
      Here's an example showing the indexvariable's undefined value after the loop:
      ```
      for i = 1 to 5 do
          message 'Inside loop: i = ' || char(i);
      endfor;
      message 'After loop: i = ' || char(i);  /* i's value is undefined here */
      ```
      This code demonstrates that i's value is undefined after the loop ends.

  - question: How to use a for loop to initialize an array in Actian 4GL OpenROAD For Statement?
    answer: |
      Here's how to initialize an array using a for loop:
      ```
      for i = 1 to 10 do
          myArray[i].Value = i * 2;
          myArray[i].IsEven = (i mod 2 = 0);
      endfor;
      ```
      This loop initializes an array with calculated values and boolean flags.

  - question: >-
      Write code to demonstrate the use of the return statement within an Actian 4GL OpenROAD For Statement.
    answer: |
      Here's an example using the return statement within a for loop:
      ```
      procedure FindValue(searchValue = integer) =
      begin
          for i = 1 to dataArray.Lastrow do
              if dataArray[i] = searchValue then
                  return i;  /* Returns the index and exits the procedure */
              endif;
          endfor;
          return 0;  /* Value not found */
      end
      ```
      This procedure searches for a value and returns its index or 0 if not found.

  - question: >-
      How to use a for loop to reverse the elements of an array in Actian 4GL OpenROAD For Statement?
    answer: |
      Here's how to reverse an array using a for loop:
      ```
      for i = 1 to array.Lastrow / 2 do
          temp = array[i];
          array[i] = array[array.Lastrow - i + 1];
          array[array.Lastrow - i + 1] = temp;
      endfor;
      ```
      This loop swaps elements from the start and end of the array, moving towards the center.

  - question: Write code to demonstrate boundary checking within an Actian 4GL OpenROAD For Statement.
    answer: |
      Here's an example of boundary checking in a for loop:
      ```
      maxSize = 100;
      for i = 1 to inputArray.Lastrow do
          if i > maxSize then
              message 'Warning: Max size exceeded. Truncating array.';
              endloop;
          endif;
          processedArray[i] = inputArray[i];
      endfor;
      ```
      This code checks if the loop exceeds a maximum size and truncates the array if necessary.

  - question: >-
      How to use nested for loops to create a multiplication table in Actian 4GL OpenROAD For Statement?
    answer: |
      Here's how to create a multiplication table using nested for loops:
      ```
      for i = 1 to 10 do
          for j = 1 to 10 do
              product = i * j;
              message char(i) || ' x ' || char(j) || ' = ' || char(product);
          endfor;
      endfor;
      ```
      This code generates a 10x10 multiplication table.

  - question: >-
      Write code to show how to use a for loop with a dynamic end condition in Actian 4GL OpenROAD For
      Statement.
    answer: |
      Here's an example of a for loop with a dynamic end condition:
      ```
      endValue = 10;
      for i = 1 to endValue do
          message 'Current value: ' || char(i);
          if i = 5 then
              endValue = 15;  /* Extends the loop */
          endif;
      endfor;
      ```
      This loop demonstrates how changing the end condition during iteration affects the loop.
